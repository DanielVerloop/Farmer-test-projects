<?xml version="1.0" encoding="UTF-8" ?>
<testsuite tests="24" failures="8" name="io.cucumber.vm.RunCucumberTest" time="0.285" errors="0" skipped="8">
  <properties>
    <property name="idea.version" value="2021.3.2"/>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="java.vm.version" value="17.0.2+8-LTS-86"/>
    <property name="sun.boot.library.path" value="C:\Program Files\Java\jdk-17.0.2\bin"/>
    <property name="user.country.format" value="NL"/>
    <property name="maven.multiModuleProjectDirectory" value="C:\Users\danielv\Documents\Git test projects\CucumberVendingMachine"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="java.vendor.url" value="https://java.oracle.com/"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="path.separator" value=";"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="user.script" value=""/>
    <property name="user.country" value="US"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="C:\Users\danielv\Documents\Git test projects\CucumberVendingMachine"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="java.runtime.version" value="17.0.2+8-LTS-86"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="C:\Users\danielv\AppData\Local\Temp\"/>
    <property name="line.separator" value="
"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="user.variant" value=""/>
    <property name="os.name" value="Windows 10"/>
    <property name="maven.ext.class.path" value="C:\Program Files\JetBrains\IntelliJ IDEA 2021.3.2\plugins\maven\lib\maven-event-listener.jar"/>
    <property name="classworlds.conf" value="C:\Users\danielv\.m2\wrapper\dists\apache-maven-3.6.3-bin\1iopthnavndlasol9gbrbg6bf2\apache-maven-3.6.3\bin\m2.conf"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.library.path" value="C:\Program Files\Java\jdk-17.0.2\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Common Files\Oracle\Java\javapath;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Gradle\gradle-7.3.3\bin;C:\Maven\apache-maven-3.8.4\bin;C:\Program Files\Git\cmd;C:\Users\danielv\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\PyCharm Community Edition 2021.3.2\bin;;."/>
    <property name="maven.conf" value="C:\Users\danielv\.m2\wrapper\dists\apache-maven-3.6.3-bin\1iopthnavndlasol9gbrbg6bf2\apache-maven-3.6.3/conf"/>
    <property name="jdk.debug" value="release"/>
    <property name="java.class.version" value="61.0"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="10.0"/>
    <property name="user.home" value="C:\Users\danielv"/>
    <property name="user.timezone" value="Europe/Amsterdam"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.specification.version" value="17"/>
    <property name="user.name" value="DanielV"/>
    <property name="java.class.path" value="C:\Users\danielv\.m2\wrapper\dists\apache-maven-3.6.3-bin\1iopthnavndlasol9gbrbg6bf2\apache-maven-3.6.3\boot\plexus-classworlds-2.6.0.jar;C:\Users\danielv\.m2\wrapper\dists\apache-maven-3.6.3-bin\1iopthnavndlasol9gbrbg6bf2\apache-maven-3.6.3\boot\plexus-classworlds.license"/>
    <property name="java.vm.specification.version" value="17"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="sun.java.command" value="org.codehaus.classworlds.Launcher -Didea.version=2021.3.2 test"/>
    <property name="java.home" value="C:\Program Files\Java\jdk-17.0.2"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="user.language.format" value="nl"/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.version" value="17.0.2"/>
    <property name="native.encoding" value="Cp1252"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="maven.home" value="C:\Users\danielv\.m2\wrapper\dists\apache-maven-3.6.3-bin\1iopthnavndlasol9gbrbg6bf2\apache-maven-3.6.3"/>
    <property name="file.separator" value="\"/>
    <property name="java.version.date" value="2022-01-18"/>
    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.cpu.isalist" value="amd64"/>
  </properties>
  <testcase classname="Vending Machine" name="Have Product and user have exact amount of money" time="0.162"/>
  <testcase classname="Vending Machine" name="Have Product and user have exact amount of money" time="0.007"/>
  <testcase classname="Vending Machine" name="Have Product and user have exact amount of money" time="0"/>
  <testcase classname="Vending Machine" name="Have Product and user have exact amount of money" time="0.016"/>
  <testcase classname="Vending Machine" name="Have Product and user have exact amount of money" time="0"/>
  <testcase classname="Vending Machine" name="Have Product and user have exact amount of money" time="0"/>
  <testcase classname="Vending Machine" name="Have Product and user have exact amount of money" time="0.015"/>
  <testcase classname="Vending Machine" name="Have Product and user have exact amount of money" time="0"/>
  <testcase classname="Vending Machine" name="Have Product and user to receive change" time="0.016">
    <failure type="java.lang.AssertionError">java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:87)
	at org.junit.Assert.assertTrue(Assert.java:42)
	at org.junit.Assert.assertTrue(Assert.java:53)
	at io.cucumber.vm.StepDefs.theInventoryStockOfProductMustBeEqualToArg0Units(StepDefs.java:58)
	at ✽.the inventory stock of &quot;chips&quot; must be equal to 9 units(classpath:io/cucumber/vm/vm.feature:49)
</failure>
    <system-out>
@tag @tag2
Scenario Outline: Have Product and user to receive change      &amp;#27;[90m# io/cucumber/vm/vm.feature:54&amp;#27;[0m
  &amp;#27;[32mGiven &amp;#27;[0m&amp;#27;[32mthere exists a vending machine&amp;#27;[0m                         &amp;#27;[90m# io.cucumber.vm.StepDefs.thereExistsAVendingMachine()&amp;#27;[0m
  &amp;#27;[32mAnd &amp;#27;[0m&amp;#27;[32mit has &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m10&amp;#27;[0m&amp;#27;[32m &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m&quot;chips&quot;&amp;#27;[0m&amp;#27;[32m in its inventory&amp;#27;[0m                       &amp;#27;[90m# io.cucumber.vm.StepDefs.itHasArg0ProductInItsInventory(int,java.lang.String)&amp;#27;[0m
  &amp;#27;[32mWhen &amp;#27;[0m&amp;#27;[32mthe user inserts the &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m2.50&amp;#27;[0m&amp;#27;[32m dollars&amp;#27;[0m                       &amp;#27;[90m# io.cucumber.vm.StepDefs.theUserInsertsTheMoneyDollars(double)&amp;#27;[0m
  &amp;#27;[32mAnd &amp;#27;[0m&amp;#27;[32mselects the &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m&quot;chips&quot;&amp;#27;[0m                                      &amp;#27;[90m# io.cucumber.vm.StepDefs.selectsTheProduct(java.lang.String)&amp;#27;[0m
  &amp;#27;[32mAnd &amp;#27;[0m&amp;#27;[32mthe &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m&quot;chips&quot;&amp;#27;[0m&amp;#27;[32m leaves the machine&amp;#27;[0m                           &amp;#27;[90m# io.cucumber.vm.StepDefs.theProductLeavesTheMachine(java.lang.String)&amp;#27;[0m
  &amp;#27;[31mThen &amp;#27;[0m&amp;#27;[31mthe inventory stock of &amp;#27;[0m&amp;#27;[31m&amp;#27;[1m&quot;chips&quot;&amp;#27;[0m&amp;#27;[31m must be equal to &amp;#27;[0m&amp;#27;[31m&amp;#27;[1m9&amp;#27;[0m&amp;#27;[31m units&amp;#27;[0m &amp;#27;[90m# io.cucumber.vm.StepDefs.theInventoryStockOfProductMustBeEqualToArg0Units(java.lang.String,int)&amp;#27;[0m
      &amp;#27;[31mjava.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:87)
	at org.junit.Assert.assertTrue(Assert.java:42)
	at org.junit.Assert.assertTrue(Assert.java:53)
	at io.cucumber.vm.StepDefs.theInventoryStockOfProductMustBeEqualToArg0Units(StepDefs.java:58)
	at ?.the inventory stock of &quot;chips&quot; must be equal to 9 units(classpath:io/cucumber/vm/vm.feature:49)
&amp;#27;[0m
  &amp;#27;[36mAnd &amp;#27;[0m&amp;#27;[36mthe vending machine gives &amp;#27;[0m&amp;#27;[36m&amp;#27;[1m0.50&amp;#27;[0m&amp;#27;[36m back&amp;#27;[0m                      &amp;#27;[90m# io.cucumber.vm.StepDefs.theVendingMachineGivesChangeBack(double)&amp;#27;[0m
</system-out>
  </testcase>
  <testcase classname="Vending Machine" name="Have Product and user to receive change" time="0">
    <failure type="java.lang.AssertionError">java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:87)
	at org.junit.Assert.assertTrue(Assert.java:42)
	at org.junit.Assert.assertTrue(Assert.java:53)
	at io.cucumber.vm.StepDefs.theInventoryStockOfProductMustBeEqualToArg0Units(StepDefs.java:58)
	at ✽.the inventory stock of &quot;chocolate&quot; must be equal to 9 units(classpath:io/cucumber/vm/vm.feature:49)
</failure>
    <system-out>
@tag @tag2
Scenario Outline: Have Product and user to receive change          &amp;#27;[90m# io/cucumber/vm/vm.feature:55&amp;#27;[0m
  &amp;#27;[32mGiven &amp;#27;[0m&amp;#27;[32mthere exists a vending machine&amp;#27;[0m                             &amp;#27;[90m# io.cucumber.vm.StepDefs.thereExistsAVendingMachine()&amp;#27;[0m
  &amp;#27;[32mAnd &amp;#27;[0m&amp;#27;[32mit has &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m10&amp;#27;[0m&amp;#27;[32m &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m&quot;chocolate&quot;&amp;#27;[0m&amp;#27;[32m in its inventory&amp;#27;[0m                       &amp;#27;[90m# io.cucumber.vm.StepDefs.itHasArg0ProductInItsInventory(int,java.lang.String)&amp;#27;[0m
  &amp;#27;[32mWhen &amp;#27;[0m&amp;#27;[32mthe user inserts the &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m3.50&amp;#27;[0m&amp;#27;[32m dollars&amp;#27;[0m                           &amp;#27;[90m# io.cucumber.vm.StepDefs.theUserInsertsTheMoneyDollars(double)&amp;#27;[0m
  &amp;#27;[32mAnd &amp;#27;[0m&amp;#27;[32mselects the &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m&quot;chocolate&quot;&amp;#27;[0m                                      &amp;#27;[90m# io.cucumber.vm.StepDefs.selectsTheProduct(java.lang.String)&amp;#27;[0m
  &amp;#27;[32mAnd &amp;#27;[0m&amp;#27;[32mthe &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m&quot;chocolate&quot;&amp;#27;[0m&amp;#27;[32m leaves the machine&amp;#27;[0m                           &amp;#27;[90m# io.cucumber.vm.StepDefs.theProductLeavesTheMachine(java.lang.String)&amp;#27;[0m
  &amp;#27;[31mThen &amp;#27;[0m&amp;#27;[31mthe inventory stock of &amp;#27;[0m&amp;#27;[31m&amp;#27;[1m&quot;chocolate&quot;&amp;#27;[0m&amp;#27;[31m must be equal to &amp;#27;[0m&amp;#27;[31m&amp;#27;[1m9&amp;#27;[0m&amp;#27;[31m units&amp;#27;[0m &amp;#27;[90m# io.cucumber.vm.StepDefs.theInventoryStockOfProductMustBeEqualToArg0Units(java.lang.String,int)&amp;#27;[0m
      &amp;#27;[31mjava.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:87)
	at org.junit.Assert.assertTrue(Assert.java:42)
	at org.junit.Assert.assertTrue(Assert.java:53)
	at io.cucumber.vm.StepDefs.theInventoryStockOfProductMustBeEqualToArg0Units(StepDefs.java:58)
	at ?.the inventory stock of &quot;chocolate&quot; must be equal to 9 units(classpath:io/cucumber/vm/vm.feature:49)
&amp;#27;[0m
  &amp;#27;[36mAnd &amp;#27;[0m&amp;#27;[36mthe vending machine gives &amp;#27;[0m&amp;#27;[36m&amp;#27;[1m1.00&amp;#27;[0m&amp;#27;[36m back&amp;#27;[0m                          &amp;#27;[90m# io.cucumber.vm.StepDefs.theVendingMachineGivesChangeBack(double)&amp;#27;[0m
</system-out>
  </testcase>
  <testcase classname="Vending Machine" name="Have Product and user to receive change" time="0">
    <failure type="java.lang.AssertionError">java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:87)
	at org.junit.Assert.assertTrue(Assert.java:42)
	at org.junit.Assert.assertTrue(Assert.java:53)
	at io.cucumber.vm.StepDefs.theInventoryStockOfProductMustBeEqualToArg0Units(StepDefs.java:58)
	at ✽.the inventory stock of &quot;cookie&quot; must be equal to 9 units(classpath:io/cucumber/vm/vm.feature:49)
</failure>
    <system-out>
@tag @tag2
Scenario Outline: Have Product and user to receive change       &amp;#27;[90m# io/cucumber/vm/vm.feature:56&amp;#27;[0m
  &amp;#27;[32mGiven &amp;#27;[0m&amp;#27;[32mthere exists a vending machine&amp;#27;[0m                          &amp;#27;[90m# io.cucumber.vm.StepDefs.thereExistsAVendingMachine()&amp;#27;[0m
  &amp;#27;[32mAnd &amp;#27;[0m&amp;#27;[32mit has &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m10&amp;#27;[0m&amp;#27;[32m &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m&quot;cookie&quot;&amp;#27;[0m&amp;#27;[32m in its inventory&amp;#27;[0m                       &amp;#27;[90m# io.cucumber.vm.StepDefs.itHasArg0ProductInItsInventory(int,java.lang.String)&amp;#27;[0m
  &amp;#27;[32mWhen &amp;#27;[0m&amp;#27;[32mthe user inserts the &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m2.00&amp;#27;[0m&amp;#27;[32m dollars&amp;#27;[0m                        &amp;#27;[90m# io.cucumber.vm.StepDefs.theUserInsertsTheMoneyDollars(double)&amp;#27;[0m
  &amp;#27;[32mAnd &amp;#27;[0m&amp;#27;[32mselects the &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m&quot;cookie&quot;&amp;#27;[0m                                      &amp;#27;[90m# io.cucumber.vm.StepDefs.selectsTheProduct(java.lang.String)&amp;#27;[0m
  &amp;#27;[32mAnd &amp;#27;[0m&amp;#27;[32mthe &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m&quot;cookie&quot;&amp;#27;[0m&amp;#27;[32m leaves the machine&amp;#27;[0m                           &amp;#27;[90m# io.cucumber.vm.StepDefs.theProductLeavesTheMachine(java.lang.String)&amp;#27;[0m
  &amp;#27;[31mThen &amp;#27;[0m&amp;#27;[31mthe inventory stock of &amp;#27;[0m&amp;#27;[31m&amp;#27;[1m&quot;cookie&quot;&amp;#27;[0m&amp;#27;[31m must be equal to &amp;#27;[0m&amp;#27;[31m&amp;#27;[1m9&amp;#27;[0m&amp;#27;[31m units&amp;#27;[0m &amp;#27;[90m# io.cucumber.vm.StepDefs.theInventoryStockOfProductMustBeEqualToArg0Units(java.lang.String,int)&amp;#27;[0m
      &amp;#27;[31mjava.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:87)
	at org.junit.Assert.assertTrue(Assert.java:42)
	at org.junit.Assert.assertTrue(Assert.java:53)
	at io.cucumber.vm.StepDefs.theInventoryStockOfProductMustBeEqualToArg0Units(StepDefs.java:58)
	at ?.the inventory stock of &quot;cookie&quot; must be equal to 9 units(classpath:io/cucumber/vm/vm.feature:49)
&amp;#27;[0m
  &amp;#27;[36mAnd &amp;#27;[0m&amp;#27;[36mthe vending machine gives &amp;#27;[0m&amp;#27;[36m&amp;#27;[1m0.25&amp;#27;[0m&amp;#27;[36m back&amp;#27;[0m                       &amp;#27;[90m# io.cucumber.vm.StepDefs.theVendingMachineGivesChangeBack(double)&amp;#27;[0m
</system-out>
  </testcase>
  <testcase classname="Vending Machine" name="Have Product and user to receive change" time="0.015">
    <failure type="java.lang.AssertionError">java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:87)
	at org.junit.Assert.assertTrue(Assert.java:42)
	at org.junit.Assert.assertTrue(Assert.java:53)
	at io.cucumber.vm.StepDefs.theInventoryStockOfProductMustBeEqualToArg0Units(StepDefs.java:58)
	at ✽.the inventory stock of &quot;candy&quot; must be equal to 9 units(classpath:io/cucumber/vm/vm.feature:49)
</failure>
    <system-out>
@tag @tag2
Scenario Outline: Have Product and user to receive change      &amp;#27;[90m# io/cucumber/vm/vm.feature:57&amp;#27;[0m
  &amp;#27;[32mGiven &amp;#27;[0m&amp;#27;[32mthere exists a vending machine&amp;#27;[0m                         &amp;#27;[90m# io.cucumber.vm.StepDefs.thereExistsAVendingMachine()&amp;#27;[0m
  &amp;#27;[32mAnd &amp;#27;[0m&amp;#27;[32mit has &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m10&amp;#27;[0m&amp;#27;[32m &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m&quot;candy&quot;&amp;#27;[0m&amp;#27;[32m in its inventory&amp;#27;[0m                       &amp;#27;[90m# io.cucumber.vm.StepDefs.itHasArg0ProductInItsInventory(int,java.lang.String)&amp;#27;[0m
  &amp;#27;[32mWhen &amp;#27;[0m&amp;#27;[32mthe user inserts the &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m2.00&amp;#27;[0m&amp;#27;[32m dollars&amp;#27;[0m                       &amp;#27;[90m# io.cucumber.vm.StepDefs.theUserInsertsTheMoneyDollars(double)&amp;#27;[0m
  &amp;#27;[32mAnd &amp;#27;[0m&amp;#27;[32mselects the &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m&quot;candy&quot;&amp;#27;[0m                                      &amp;#27;[90m# io.cucumber.vm.StepDefs.selectsTheProduct(java.lang.String)&amp;#27;[0m
  &amp;#27;[32mAnd &amp;#27;[0m&amp;#27;[32mthe &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m&quot;candy&quot;&amp;#27;[0m&amp;#27;[32m leaves the machine&amp;#27;[0m                           &amp;#27;[90m# io.cucumber.vm.StepDefs.theProductLeavesTheMachine(java.lang.String)&amp;#27;[0m
  &amp;#27;[31mThen &amp;#27;[0m&amp;#27;[31mthe inventory stock of &amp;#27;[0m&amp;#27;[31m&amp;#27;[1m&quot;candy&quot;&amp;#27;[0m&amp;#27;[31m must be equal to &amp;#27;[0m&amp;#27;[31m&amp;#27;[1m9&amp;#27;[0m&amp;#27;[31m units&amp;#27;[0m &amp;#27;[90m# io.cucumber.vm.StepDefs.theInventoryStockOfProductMustBeEqualToArg0Units(java.lang.String,int)&amp;#27;[0m
      &amp;#27;[31mjava.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:87)
	at org.junit.Assert.assertTrue(Assert.java:42)
	at org.junit.Assert.assertTrue(Assert.java:53)
	at io.cucumber.vm.StepDefs.theInventoryStockOfProductMustBeEqualToArg0Units(StepDefs.java:58)
	at ?.the inventory stock of &quot;candy&quot; must be equal to 9 units(classpath:io/cucumber/vm/vm.feature:49)
&amp;#27;[0m
  &amp;#27;[36mAnd &amp;#27;[0m&amp;#27;[36mthe vending machine gives &amp;#27;[0m&amp;#27;[36m&amp;#27;[1m0.50&amp;#27;[0m&amp;#27;[36m back&amp;#27;[0m                      &amp;#27;[90m# io.cucumber.vm.StepDefs.theVendingMachineGivesChangeBack(double)&amp;#27;[0m
</system-out>
  </testcase>
  <testcase classname="Vending Machine" name="Have Product and user to receive change" time="0">
    <failure type="java.lang.AssertionError">java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:87)
	at org.junit.Assert.assertTrue(Assert.java:42)
	at org.junit.Assert.assertTrue(Assert.java:53)
	at io.cucumber.vm.StepDefs.theInventoryStockOfProductMustBeEqualToArg0Units(StepDefs.java:58)
	at ✽.the inventory stock of &quot;juice&quot; must be equal to 9 units(classpath:io/cucumber/vm/vm.feature:49)
</failure>
    <system-out>
@tag @tag2
Scenario Outline: Have Product and user to receive change      &amp;#27;[90m# io/cucumber/vm/vm.feature:58&amp;#27;[0m
  &amp;#27;[32mGiven &amp;#27;[0m&amp;#27;[32mthere exists a vending machine&amp;#27;[0m                         &amp;#27;[90m# io.cucumber.vm.StepDefs.thereExistsAVendingMachine()&amp;#27;[0m
  &amp;#27;[32mAnd &amp;#27;[0m&amp;#27;[32mit has &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m10&amp;#27;[0m&amp;#27;[32m &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m&quot;juice&quot;&amp;#27;[0m&amp;#27;[32m in its inventory&amp;#27;[0m                       &amp;#27;[90m# io.cucumber.vm.StepDefs.itHasArg0ProductInItsInventory(int,java.lang.String)&amp;#27;[0m
  &amp;#27;[32mWhen &amp;#27;[0m&amp;#27;[32mthe user inserts the &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m5.00&amp;#27;[0m&amp;#27;[32m dollars&amp;#27;[0m                       &amp;#27;[90m# io.cucumber.vm.StepDefs.theUserInsertsTheMoneyDollars(double)&amp;#27;[0m
  &amp;#27;[32mAnd &amp;#27;[0m&amp;#27;[32mselects the &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m&quot;juice&quot;&amp;#27;[0m                                      &amp;#27;[90m# io.cucumber.vm.StepDefs.selectsTheProduct(java.lang.String)&amp;#27;[0m
  &amp;#27;[32mAnd &amp;#27;[0m&amp;#27;[32mthe &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m&quot;juice&quot;&amp;#27;[0m&amp;#27;[32m leaves the machine&amp;#27;[0m                           &amp;#27;[90m# io.cucumber.vm.StepDefs.theProductLeavesTheMachine(java.lang.String)&amp;#27;[0m
  &amp;#27;[31mThen &amp;#27;[0m&amp;#27;[31mthe inventory stock of &amp;#27;[0m&amp;#27;[31m&amp;#27;[1m&quot;juice&quot;&amp;#27;[0m&amp;#27;[31m must be equal to &amp;#27;[0m&amp;#27;[31m&amp;#27;[1m9&amp;#27;[0m&amp;#27;[31m units&amp;#27;[0m &amp;#27;[90m# io.cucumber.vm.StepDefs.theInventoryStockOfProductMustBeEqualToArg0Units(java.lang.String,int)&amp;#27;[0m
      &amp;#27;[31mjava.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:87)
	at org.junit.Assert.assertTrue(Assert.java:42)
	at org.junit.Assert.assertTrue(Assert.java:53)
	at io.cucumber.vm.StepDefs.theInventoryStockOfProductMustBeEqualToArg0Units(StepDefs.java:58)
	at ?.the inventory stock of &quot;juice&quot; must be equal to 9 units(classpath:io/cucumber/vm/vm.feature:49)
&amp;#27;[0m
  &amp;#27;[36mAnd &amp;#27;[0m&amp;#27;[36mthe vending machine gives &amp;#27;[0m&amp;#27;[36m&amp;#27;[1m1.75&amp;#27;[0m&amp;#27;[36m back&amp;#27;[0m                      &amp;#27;[90m# io.cucumber.vm.StepDefs.theVendingMachineGivesChangeBack(double)&amp;#27;[0m
</system-out>
  </testcase>
  <testcase classname="Vending Machine" name="Have Product and user to receive change" time="0">
    <failure type="java.lang.AssertionError">java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:87)
	at org.junit.Assert.assertTrue(Assert.java:42)
	at org.junit.Assert.assertTrue(Assert.java:53)
	at io.cucumber.vm.StepDefs.theInventoryStockOfProductMustBeEqualToArg0Units(StepDefs.java:58)
	at ✽.the inventory stock of &quot;water&quot; must be equal to 9 units(classpath:io/cucumber/vm/vm.feature:49)
</failure>
    <system-out>
@tag @tag2
Scenario Outline: Have Product and user to receive change      &amp;#27;[90m# io/cucumber/vm/vm.feature:59&amp;#27;[0m
  &amp;#27;[32mGiven &amp;#27;[0m&amp;#27;[32mthere exists a vending machine&amp;#27;[0m                         &amp;#27;[90m# io.cucumber.vm.StepDefs.thereExistsAVendingMachine()&amp;#27;[0m
  &amp;#27;[32mAnd &amp;#27;[0m&amp;#27;[32mit has &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m10&amp;#27;[0m&amp;#27;[32m &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m&quot;water&quot;&amp;#27;[0m&amp;#27;[32m in its inventory&amp;#27;[0m                       &amp;#27;[90m# io.cucumber.vm.StepDefs.itHasArg0ProductInItsInventory(int,java.lang.String)&amp;#27;[0m
  &amp;#27;[32mWhen &amp;#27;[0m&amp;#27;[32mthe user inserts the &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m3.00&amp;#27;[0m&amp;#27;[32m dollars&amp;#27;[0m                       &amp;#27;[90m# io.cucumber.vm.StepDefs.theUserInsertsTheMoneyDollars(double)&amp;#27;[0m
  &amp;#27;[32mAnd &amp;#27;[0m&amp;#27;[32mselects the &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m&quot;water&quot;&amp;#27;[0m                                      &amp;#27;[90m# io.cucumber.vm.StepDefs.selectsTheProduct(java.lang.String)&amp;#27;[0m
  &amp;#27;[32mAnd &amp;#27;[0m&amp;#27;[32mthe &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m&quot;water&quot;&amp;#27;[0m&amp;#27;[32m leaves the machine&amp;#27;[0m                           &amp;#27;[90m# io.cucumber.vm.StepDefs.theProductLeavesTheMachine(java.lang.String)&amp;#27;[0m
  &amp;#27;[31mThen &amp;#27;[0m&amp;#27;[31mthe inventory stock of &amp;#27;[0m&amp;#27;[31m&amp;#27;[1m&quot;water&quot;&amp;#27;[0m&amp;#27;[31m must be equal to &amp;#27;[0m&amp;#27;[31m&amp;#27;[1m9&amp;#27;[0m&amp;#27;[31m units&amp;#27;[0m &amp;#27;[90m# io.cucumber.vm.StepDefs.theInventoryStockOfProductMustBeEqualToArg0Units(java.lang.String,int)&amp;#27;[0m
      &amp;#27;[31mjava.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:87)
	at org.junit.Assert.assertTrue(Assert.java:42)
	at org.junit.Assert.assertTrue(Assert.java:53)
	at io.cucumber.vm.StepDefs.theInventoryStockOfProductMustBeEqualToArg0Units(StepDefs.java:58)
	at ?.the inventory stock of &quot;water&quot; must be equal to 9 units(classpath:io/cucumber/vm/vm.feature:49)
&amp;#27;[0m
  &amp;#27;[36mAnd &amp;#27;[0m&amp;#27;[36mthe vending machine gives &amp;#27;[0m&amp;#27;[36m&amp;#27;[1m1.50&amp;#27;[0m&amp;#27;[36m back&amp;#27;[0m                      &amp;#27;[90m# io.cucumber.vm.StepDefs.theVendingMachineGivesChangeBack(double)&amp;#27;[0m
</system-out>
  </testcase>
  <testcase classname="Vending Machine" name="Have Product and user to receive change" time="0">
    <failure type="java.lang.AssertionError">java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:87)
	at org.junit.Assert.assertTrue(Assert.java:42)
	at org.junit.Assert.assertTrue(Assert.java:53)
	at io.cucumber.vm.StepDefs.theInventoryStockOfProductMustBeEqualToArg0Units(StepDefs.java:58)
	at ✽.the inventory stock of &quot;coke&quot; must be equal to 9 units(classpath:io/cucumber/vm/vm.feature:49)
</failure>
    <system-out>
@tag @tag2
Scenario Outline: Have Product and user to receive change     &amp;#27;[90m# io/cucumber/vm/vm.feature:60&amp;#27;[0m
  &amp;#27;[32mGiven &amp;#27;[0m&amp;#27;[32mthere exists a vending machine&amp;#27;[0m                        &amp;#27;[90m# io.cucumber.vm.StepDefs.thereExistsAVendingMachine()&amp;#27;[0m
  &amp;#27;[32mAnd &amp;#27;[0m&amp;#27;[32mit has &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m10&amp;#27;[0m&amp;#27;[32m &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m&quot;coke&quot;&amp;#27;[0m&amp;#27;[32m in its inventory&amp;#27;[0m                       &amp;#27;[90m# io.cucumber.vm.StepDefs.itHasArg0ProductInItsInventory(int,java.lang.String)&amp;#27;[0m
  &amp;#27;[32mWhen &amp;#27;[0m&amp;#27;[32mthe user inserts the &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m3.00&amp;#27;[0m&amp;#27;[32m dollars&amp;#27;[0m                      &amp;#27;[90m# io.cucumber.vm.StepDefs.theUserInsertsTheMoneyDollars(double)&amp;#27;[0m
  &amp;#27;[32mAnd &amp;#27;[0m&amp;#27;[32mselects the &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m&quot;coke&quot;&amp;#27;[0m                                      &amp;#27;[90m# io.cucumber.vm.StepDefs.selectsTheProduct(java.lang.String)&amp;#27;[0m
  &amp;#27;[32mAnd &amp;#27;[0m&amp;#27;[32mthe &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m&quot;coke&quot;&amp;#27;[0m&amp;#27;[32m leaves the machine&amp;#27;[0m                           &amp;#27;[90m# io.cucumber.vm.StepDefs.theProductLeavesTheMachine(java.lang.String)&amp;#27;[0m
  &amp;#27;[31mThen &amp;#27;[0m&amp;#27;[31mthe inventory stock of &amp;#27;[0m&amp;#27;[31m&amp;#27;[1m&quot;coke&quot;&amp;#27;[0m&amp;#27;[31m must be equal to &amp;#27;[0m&amp;#27;[31m&amp;#27;[1m9&amp;#27;[0m&amp;#27;[31m units&amp;#27;[0m &amp;#27;[90m# io.cucumber.vm.StepDefs.theInventoryStockOfProductMustBeEqualToArg0Units(java.lang.String,int)&amp;#27;[0m
      &amp;#27;[31mjava.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:87)
	at org.junit.Assert.assertTrue(Assert.java:42)
	at org.junit.Assert.assertTrue(Assert.java:53)
	at io.cucumber.vm.StepDefs.theInventoryStockOfProductMustBeEqualToArg0Units(StepDefs.java:58)
	at ?.the inventory stock of &quot;coke&quot; must be equal to 9 units(classpath:io/cucumber/vm/vm.feature:49)
&amp;#27;[0m
  &amp;#27;[36mAnd &amp;#27;[0m&amp;#27;[36mthe vending machine gives &amp;#27;[0m&amp;#27;[36m&amp;#27;[1m0.75&amp;#27;[0m&amp;#27;[36m back&amp;#27;[0m                     &amp;#27;[90m# io.cucumber.vm.StepDefs.theVendingMachineGivesChangeBack(double)&amp;#27;[0m
</system-out>
  </testcase>
  <testcase classname="Vending Machine" name="Have Product and user to receive change" time="0.016">
    <failure type="java.lang.AssertionError">java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:87)
	at org.junit.Assert.assertTrue(Assert.java:42)
	at org.junit.Assert.assertTrue(Assert.java:53)
	at io.cucumber.vm.StepDefs.theInventoryStockOfProductMustBeEqualToArg0Units(StepDefs.java:58)
	at ✽.the inventory stock of &quot;pepsi&quot; must be equal to 9 units(classpath:io/cucumber/vm/vm.feature:49)
</failure>
    <system-out>
@tag @tag2
Scenario Outline: Have Product and user to receive change      &amp;#27;[90m# io/cucumber/vm/vm.feature:61&amp;#27;[0m
  &amp;#27;[32mGiven &amp;#27;[0m&amp;#27;[32mthere exists a vending machine&amp;#27;[0m                         &amp;#27;[90m# io.cucumber.vm.StepDefs.thereExistsAVendingMachine()&amp;#27;[0m
  &amp;#27;[32mAnd &amp;#27;[0m&amp;#27;[32mit has &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m10&amp;#27;[0m&amp;#27;[32m &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m&quot;pepsi&quot;&amp;#27;[0m&amp;#27;[32m in its inventory&amp;#27;[0m                       &amp;#27;[90m# io.cucumber.vm.StepDefs.itHasArg0ProductInItsInventory(int,java.lang.String)&amp;#27;[0m
  &amp;#27;[32mWhen &amp;#27;[0m&amp;#27;[32mthe user inserts the &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m2.25&amp;#27;[0m&amp;#27;[32m dollars&amp;#27;[0m                       &amp;#27;[90m# io.cucumber.vm.StepDefs.theUserInsertsTheMoneyDollars(double)&amp;#27;[0m
  &amp;#27;[32mAnd &amp;#27;[0m&amp;#27;[32mselects the &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m&quot;pepsi&quot;&amp;#27;[0m                                      &amp;#27;[90m# io.cucumber.vm.StepDefs.selectsTheProduct(java.lang.String)&amp;#27;[0m
  &amp;#27;[32mAnd &amp;#27;[0m&amp;#27;[32mthe &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m&quot;pepsi&quot;&amp;#27;[0m&amp;#27;[32m leaves the machine&amp;#27;[0m                           &amp;#27;[90m# io.cucumber.vm.StepDefs.theProductLeavesTheMachine(java.lang.String)&amp;#27;[0m
  &amp;#27;[31mThen &amp;#27;[0m&amp;#27;[31mthe inventory stock of &amp;#27;[0m&amp;#27;[31m&amp;#27;[1m&quot;pepsi&quot;&amp;#27;[0m&amp;#27;[31m must be equal to &amp;#27;[0m&amp;#27;[31m&amp;#27;[1m9&amp;#27;[0m&amp;#27;[31m units&amp;#27;[0m &amp;#27;[90m# io.cucumber.vm.StepDefs.theInventoryStockOfProductMustBeEqualToArg0Units(java.lang.String,int)&amp;#27;[0m
      &amp;#27;[31mjava.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:87)
	at org.junit.Assert.assertTrue(Assert.java:42)
	at org.junit.Assert.assertTrue(Assert.java:53)
	at io.cucumber.vm.StepDefs.theInventoryStockOfProductMustBeEqualToArg0Units(StepDefs.java:58)
	at ?.the inventory stock of &quot;pepsi&quot; must be equal to 9 units(classpath:io/cucumber/vm/vm.feature:49)
&amp;#27;[0m
  &amp;#27;[36mAnd &amp;#27;[0m&amp;#27;[36mthe vending machine gives &amp;#27;[0m&amp;#27;[36m&amp;#27;[1m0.00&amp;#27;[0m&amp;#27;[36m back&amp;#27;[0m                      &amp;#27;[90m# io.cucumber.vm.StepDefs.theVendingMachineGivesChangeBack(double)&amp;#27;[0m
</system-out>
  </testcase>
  <testcase classname="Vending Machine" name="user give less money than the price of the product" time="0.022">
    <skipped/>
    <system-out>
@tag @tag3
Scenario Outline: user give less money than the price of the product &amp;#27;[90m# io/cucumber/vm/vm.feature:73&amp;#27;[0m
  &amp;#27;[32mGiven &amp;#27;[0m&amp;#27;[32mthere exists a vending machine&amp;#27;[0m                               &amp;#27;[90m# io.cucumber.vm.StepDefs.thereExistsAVendingMachine()&amp;#27;[0m
  &amp;#27;[32mAnd &amp;#27;[0m&amp;#27;[32mit has &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m10&amp;#27;[0m&amp;#27;[32m &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m&quot;chips&quot;&amp;#27;[0m&amp;#27;[32m in its inventory&amp;#27;[0m                             &amp;#27;[90m# io.cucumber.vm.StepDefs.itHasArg0ProductInItsInventory(int,java.lang.String)&amp;#27;[0m
  &amp;#27;[32mWhen &amp;#27;[0m&amp;#27;[32mthe user insert the &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m1.00&amp;#27;[0m                                      &amp;#27;[90m# io.cucumber.vm.StepDefs.theUserInsertTheMoney(double)&amp;#27;[0m
  &amp;#27;[32mAnd &amp;#27;[0m&amp;#27;[32mpresses the button with the code for the product&amp;#27;[0m               &amp;#27;[90m# io.cucumber.vm.StepDefs.pressesTheButtonWithTheCodeForTheProduct()&amp;#27;[0m
  &amp;#27;[33mThen &amp;#27;[0m&amp;#27;[33mthe vending machine asks for 1.00 dollars&amp;#27;[0m                     &amp;#27;[90m# null&amp;#27;[0m
</system-out>
  </testcase>
  <testcase classname="Vending Machine" name="user give less money than the price of the product" time="0">
    <skipped/>
    <system-out>
@tag @tag3
Scenario Outline: user give less money than the price of the product &amp;#27;[90m# io/cucumber/vm/vm.feature:74&amp;#27;[0m
  &amp;#27;[32mGiven &amp;#27;[0m&amp;#27;[32mthere exists a vending machine&amp;#27;[0m                               &amp;#27;[90m# io.cucumber.vm.StepDefs.thereExistsAVendingMachine()&amp;#27;[0m
  &amp;#27;[32mAnd &amp;#27;[0m&amp;#27;[32mit has &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m10&amp;#27;[0m&amp;#27;[32m &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m&quot;chocolate&quot;&amp;#27;[0m&amp;#27;[32m in its inventory&amp;#27;[0m                         &amp;#27;[90m# io.cucumber.vm.StepDefs.itHasArg0ProductInItsInventory(int,java.lang.String)&amp;#27;[0m
  &amp;#27;[32mWhen &amp;#27;[0m&amp;#27;[32mthe user insert the &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m2.00&amp;#27;[0m                                      &amp;#27;[90m# io.cucumber.vm.StepDefs.theUserInsertTheMoney(double)&amp;#27;[0m
  &amp;#27;[32mAnd &amp;#27;[0m&amp;#27;[32mpresses the button with the code for the product&amp;#27;[0m               &amp;#27;[90m# io.cucumber.vm.StepDefs.pressesTheButtonWithTheCodeForTheProduct()&amp;#27;[0m
  &amp;#27;[33mThen &amp;#27;[0m&amp;#27;[33mthe vending machine asks for 0.50 dollars&amp;#27;[0m                     &amp;#27;[90m# null&amp;#27;[0m
</system-out>
  </testcase>
  <testcase classname="Vending Machine" name="user give less money than the price of the product" time="0">
    <skipped/>
    <system-out>
@tag @tag3
Scenario Outline: user give less money than the price of the product &amp;#27;[90m# io/cucumber/vm/vm.feature:75&amp;#27;[0m
  &amp;#27;[32mGiven &amp;#27;[0m&amp;#27;[32mthere exists a vending machine&amp;#27;[0m                               &amp;#27;[90m# io.cucumber.vm.StepDefs.thereExistsAVendingMachine()&amp;#27;[0m
  &amp;#27;[32mAnd &amp;#27;[0m&amp;#27;[32mit has &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m10&amp;#27;[0m&amp;#27;[32m &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m&quot;cookie&quot;&amp;#27;[0m&amp;#27;[32m in its inventory&amp;#27;[0m                            &amp;#27;[90m# io.cucumber.vm.StepDefs.itHasArg0ProductInItsInventory(int,java.lang.String)&amp;#27;[0m
  &amp;#27;[32mWhen &amp;#27;[0m&amp;#27;[32mthe user insert the &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m1.50&amp;#27;[0m                                      &amp;#27;[90m# io.cucumber.vm.StepDefs.theUserInsertTheMoney(double)&amp;#27;[0m
  &amp;#27;[32mAnd &amp;#27;[0m&amp;#27;[32mpresses the button with the code for the product&amp;#27;[0m               &amp;#27;[90m# io.cucumber.vm.StepDefs.pressesTheButtonWithTheCodeForTheProduct()&amp;#27;[0m
  &amp;#27;[33mThen &amp;#27;[0m&amp;#27;[33mthe vending machine asks for 0.25 dollars&amp;#27;[0m                     &amp;#27;[90m# null&amp;#27;[0m
</system-out>
  </testcase>
  <testcase classname="Vending Machine" name="user give less money than the price of the product" time="0">
    <skipped/>
    <system-out>
@tag @tag3
Scenario Outline: user give less money than the price of the product &amp;#27;[90m# io/cucumber/vm/vm.feature:76&amp;#27;[0m
  &amp;#27;[32mGiven &amp;#27;[0m&amp;#27;[32mthere exists a vending machine&amp;#27;[0m                               &amp;#27;[90m# io.cucumber.vm.StepDefs.thereExistsAVendingMachine()&amp;#27;[0m
  &amp;#27;[32mAnd &amp;#27;[0m&amp;#27;[32mit has &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m10&amp;#27;[0m&amp;#27;[32m &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m&quot;candy&quot;&amp;#27;[0m&amp;#27;[32m in its inventory&amp;#27;[0m                             &amp;#27;[90m# io.cucumber.vm.StepDefs.itHasArg0ProductInItsInventory(int,java.lang.String)&amp;#27;[0m
  &amp;#27;[32mWhen &amp;#27;[0m&amp;#27;[32mthe user insert the &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m0.50&amp;#27;[0m                                      &amp;#27;[90m# io.cucumber.vm.StepDefs.theUserInsertTheMoney(double)&amp;#27;[0m
  &amp;#27;[32mAnd &amp;#27;[0m&amp;#27;[32mpresses the button with the code for the product&amp;#27;[0m               &amp;#27;[90m# io.cucumber.vm.StepDefs.pressesTheButtonWithTheCodeForTheProduct()&amp;#27;[0m
  &amp;#27;[33mThen &amp;#27;[0m&amp;#27;[33mthe vending machine asks for 1.00 dollars&amp;#27;[0m                     &amp;#27;[90m# null&amp;#27;[0m
</system-out>
  </testcase>
  <testcase classname="Vending Machine" name="user give less money than the price of the product" time="0.016">
    <skipped/>
    <system-out>
@tag @tag3
Scenario Outline: user give less money than the price of the product &amp;#27;[90m# io/cucumber/vm/vm.feature:77&amp;#27;[0m
  &amp;#27;[32mGiven &amp;#27;[0m&amp;#27;[32mthere exists a vending machine&amp;#27;[0m                               &amp;#27;[90m# io.cucumber.vm.StepDefs.thereExistsAVendingMachine()&amp;#27;[0m
  &amp;#27;[32mAnd &amp;#27;[0m&amp;#27;[32mit has &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m10&amp;#27;[0m&amp;#27;[32m &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m&quot;juice&quot;&amp;#27;[0m&amp;#27;[32m in its inventory&amp;#27;[0m                             &amp;#27;[90m# io.cucumber.vm.StepDefs.itHasArg0ProductInItsInventory(int,java.lang.String)&amp;#27;[0m
  &amp;#27;[32mWhen &amp;#27;[0m&amp;#27;[32mthe user insert the &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m1.25&amp;#27;[0m                                      &amp;#27;[90m# io.cucumber.vm.StepDefs.theUserInsertTheMoney(double)&amp;#27;[0m
  &amp;#27;[32mAnd &amp;#27;[0m&amp;#27;[32mpresses the button with the code for the product&amp;#27;[0m               &amp;#27;[90m# io.cucumber.vm.StepDefs.pressesTheButtonWithTheCodeForTheProduct()&amp;#27;[0m
  &amp;#27;[33mThen &amp;#27;[0m&amp;#27;[33mthe vending machine asks for 2.00 dollars&amp;#27;[0m                     &amp;#27;[90m# null&amp;#27;[0m
</system-out>
  </testcase>
  <testcase classname="Vending Machine" name="user give less money than the price of the product" time="0">
    <skipped/>
    <system-out>
@tag @tag3
Scenario Outline: user give less money than the price of the product &amp;#27;[90m# io/cucumber/vm/vm.feature:78&amp;#27;[0m
  &amp;#27;[32mGiven &amp;#27;[0m&amp;#27;[32mthere exists a vending machine&amp;#27;[0m                               &amp;#27;[90m# io.cucumber.vm.StepDefs.thereExistsAVendingMachine()&amp;#27;[0m
  &amp;#27;[32mAnd &amp;#27;[0m&amp;#27;[32mit has &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m10&amp;#27;[0m&amp;#27;[32m &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m&quot;water&quot;&amp;#27;[0m&amp;#27;[32m in its inventory&amp;#27;[0m                             &amp;#27;[90m# io.cucumber.vm.StepDefs.itHasArg0ProductInItsInventory(int,java.lang.String)&amp;#27;[0m
  &amp;#27;[32mWhen &amp;#27;[0m&amp;#27;[32mthe user insert the &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m0.75&amp;#27;[0m                                      &amp;#27;[90m# io.cucumber.vm.StepDefs.theUserInsertTheMoney(double)&amp;#27;[0m
  &amp;#27;[32mAnd &amp;#27;[0m&amp;#27;[32mpresses the button with the code for the product&amp;#27;[0m               &amp;#27;[90m# io.cucumber.vm.StepDefs.pressesTheButtonWithTheCodeForTheProduct()&amp;#27;[0m
  &amp;#27;[33mThen &amp;#27;[0m&amp;#27;[33mthe vending machine asks for 0.75 dollars&amp;#27;[0m                     &amp;#27;[90m# null&amp;#27;[0m
</system-out>
  </testcase>
  <testcase classname="Vending Machine" name="user give less money than the price of the product" time="0">
    <skipped/>
    <system-out>
@tag @tag3
Scenario Outline: user give less money than the price of the product &amp;#27;[90m# io/cucumber/vm/vm.feature:79&amp;#27;[0m
  &amp;#27;[32mGiven &amp;#27;[0m&amp;#27;[32mthere exists a vending machine&amp;#27;[0m                               &amp;#27;[90m# io.cucumber.vm.StepDefs.thereExistsAVendingMachine()&amp;#27;[0m
  &amp;#27;[32mAnd &amp;#27;[0m&amp;#27;[32mit has &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m10&amp;#27;[0m&amp;#27;[32m &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m&quot;coke&quot;&amp;#27;[0m&amp;#27;[32m in its inventory&amp;#27;[0m                              &amp;#27;[90m# io.cucumber.vm.StepDefs.itHasArg0ProductInItsInventory(int,java.lang.String)&amp;#27;[0m
  &amp;#27;[32mWhen &amp;#27;[0m&amp;#27;[32mthe user insert the &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m2.00&amp;#27;[0m                                      &amp;#27;[90m# io.cucumber.vm.StepDefs.theUserInsertTheMoney(double)&amp;#27;[0m
  &amp;#27;[32mAnd &amp;#27;[0m&amp;#27;[32mpresses the button with the code for the product&amp;#27;[0m               &amp;#27;[90m# io.cucumber.vm.StepDefs.pressesTheButtonWithTheCodeForTheProduct()&amp;#27;[0m
  &amp;#27;[33mThen &amp;#27;[0m&amp;#27;[33mthe vending machine asks for 0.25 dollars&amp;#27;[0m                     &amp;#27;[90m# null&amp;#27;[0m
</system-out>
  </testcase>
  <testcase classname="Vending Machine" name="user give less money than the price of the product" time="0">
    <skipped/>
    <system-out>
@tag @tag3
Scenario Outline: user give less money than the price of the product &amp;#27;[90m# io/cucumber/vm/vm.feature:80&amp;#27;[0m
  &amp;#27;[32mGiven &amp;#27;[0m&amp;#27;[32mthere exists a vending machine&amp;#27;[0m                               &amp;#27;[90m# io.cucumber.vm.StepDefs.thereExistsAVendingMachine()&amp;#27;[0m
  &amp;#27;[32mAnd &amp;#27;[0m&amp;#27;[32mit has &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m10&amp;#27;[0m&amp;#27;[32m &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m&quot;pepsi&quot;&amp;#27;[0m&amp;#27;[32m in its inventory&amp;#27;[0m                             &amp;#27;[90m# io.cucumber.vm.StepDefs.itHasArg0ProductInItsInventory(int,java.lang.String)&amp;#27;[0m
  &amp;#27;[32mWhen &amp;#27;[0m&amp;#27;[32mthe user insert the &amp;#27;[0m&amp;#27;[32m&amp;#27;[1m1.25&amp;#27;[0m                                      &amp;#27;[90m# io.cucumber.vm.StepDefs.theUserInsertTheMoney(double)&amp;#27;[0m
  &amp;#27;[32mAnd &amp;#27;[0m&amp;#27;[32mpresses the button with the code for the product&amp;#27;[0m               &amp;#27;[90m# io.cucumber.vm.StepDefs.pressesTheButtonWithTheCodeForTheProduct()&amp;#27;[0m
  &amp;#27;[33mThen &amp;#27;[0m&amp;#27;[33mthe vending machine asks for 1.00 dollars&amp;#27;[0m                     &amp;#27;[90m# null&amp;#27;[0m
</system-out>
  </testcase>
</testsuite>